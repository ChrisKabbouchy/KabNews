//
//  PreferancesView.swift
//  KabNews
//
//  Created by Christian Kabouchy on 15/02/2021.
//  Copyright Â© 2021 Christian Kabouchy. All rights reserved.
//

import SwiftUI

struct PreferencesView: View {
    init(){
            UITableView.appearance().backgroundColor = .clear
        }
    
    @Environment(\.presentationMode) var presentationMode
    @EnvironmentObject var newsManager : NewsManager
    @State var selectedCountry = 0
    @State var name : String = UserDefaults.standard.string(forKey: "user-name") ?? ""
    @State var countries = ["ğŸ‡¦ğŸ‡·Argentina","ğŸ‡¦ğŸ‡¹Austria","ğŸ‡¦ğŸ‡ºAustralia","ğŸ‡§ğŸ‡ªBelgium","ğŸ‡§ğŸ‡·Brazil","ğŸ‡§ğŸ‡¬Bulgaria","ğŸ‡¨ğŸ‡¦Canada","ğŸ‡¨ğŸ‡³China"
                            ,"ğŸ‡¨ğŸ‡´Colombia","ğŸ‡¨ğŸ‡ºCuba","ğŸ‡¨ğŸ‡¿Czech Republic","ğŸ‡ªğŸ‡¬Egypt","ğŸ‡«ğŸ‡·France","ğŸ‡©ğŸ‡ªGermany","ğŸ‡¬ğŸ‡·Greece","ğŸ‡­ğŸ‡°Hong Kong","ğŸ‡­ğŸ‡ºHungary","ğŸ‡®ğŸ‡³India","ğŸ‡®ğŸ‡©Indonesia","ğŸ‡®ğŸ‡ªIreland","ğŸ‡®ğŸ‡¹Italy","ğŸ‡¯ğŸ‡µJapan","ğŸ‡±ğŸ‡»Latvia","ğŸ‡±ğŸ‡¹Lithuania","ğŸ‡²ğŸ‡¾Malaysia","ğŸ‡²ğŸ‡½Mexico","ğŸ‡²ğŸ‡¦Morocco","ğŸ‡³ğŸ‡±Netherlands","ğŸ‡³ğŸ‡¿New Zealand","ğŸ‡³ğŸ‡¬Nigeria","ğŸ‡³ğŸ‡´Norway","ğŸ‡µğŸ‡­Philippines","ğŸ‡µğŸ‡±Poland","ğŸ‡µğŸ‡¹Portugal","ğŸ‡·ğŸ‡´Romania","ğŸ‡·ğŸ‡ºRussia","ğŸ‡¸ğŸ‡¦Saudi Arabia","ğŸ‡·ğŸ‡¸Serbia","ğŸ‡¸ğŸ‡¬Singapore","ğŸ‡¸ğŸ‡°Slovakia","ğŸ‡¸ğŸ‡®Slovenia","ğŸ‡¿ğŸ‡¦South Africa","ğŸ‡°ğŸ‡·South Korea","ğŸ‡¸ğŸ‡ªSweden","ğŸ‡¨ğŸ‡­Switzerland","ğŸ‡¹ğŸ‡¼Taiwan","ğŸ‡¹ğŸ‡­Thailand","ğŸ‡¹ğŸ‡·Turkey","ğŸ‡¦ğŸ‡ªUnited Arab Emirates","ğŸ‡ºğŸ‡¦Ukraine","ğŸ‡¬ğŸ‡§United Kingdom","ğŸ‡ºğŸ‡¸United States","ğŸ‡»ğŸ‡ªVenezuela"]
    
    var body: some View {
            ZStack {
                Color("baseColor")
                    .edgesIgnoringSafeArea(.all)
                VStack(alignment: .center) {
                    Text("Welcome")
                        .font(.largeTitle)
                        .bold()
                    Form{
                        //COUNTRY PICKER
                        Picker(selection: $selectedCountry, label: Text("Country")){
                            ForEach(0..<countries.count){
                                Text(self.countries[$0]).tag($0)
                            }
                        }
                        //NAME FIELD
                        HStack{
                            Text("Your Name").padding(.trailing)
                            TextField("Name", text: self.$name).padding(.leading)
                        }
                        
                    }.padding(.vertical)
                    .background(Color("baseColor"))
                    //NEXT BUTTON
                    Button(action: {
                        UserDefaults.standard.set(self.selectedCountry, forKey: "country-selected")
                        UserDefaults.standard.set(self.name, forKey: "user-name")
                        UserDefaults.standard.set(true, forKey: "logged-in")
                        NotificationCenter.default.post(name: NSNotification.Name("statusChange"), object: nil)
                    }, label: {
                        Text("Next")
                            .bold()
                            .padding()
                            .frame(width: UIScreen.main.bounds.width - 100,height: 50 ,alignment: .center)
                            .foregroundColor(Color.white)
                            .background(Color("secondColor"))
                            .cornerRadius(10)
                            .padding(.bottom)
                    })
                    
                }.onAppear(){
                    //Notify to update the UI
                    NotificationCenter.default.addObserver(forName: NSNotification.Name("statusChange"), object: nil, queue: .main) { (_) in
                        DispatchQueue.main.async {
                            self.name = UserDefaults.standard.string(forKey: "user-name") ?? ""
                        }
                        
                    }
                }

            }
    }
}

struct PreferencesView_Previews: PreviewProvider {
    static var previews: some View {
        Group {
            PreferencesView()
        }
    }
}
